(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{207:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"概念简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念简介","aria-hidden":"true"}},[t._v("#")]),t._v(" 概念简介")]),t._v(" "),a("p",[a("strong",[t._v("Tomcat")]),t._v(" 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试 JSP 程序的首选。")]),t._v(" "),a("p",[a("strong",[t._v("HTTP")]),t._v(" 超文本传输协议（HTTP，HyperText Transfer Protocol)是互联网上应用最为广泛的一种网络协议。所有的WWW文件都必须遵守这个标准。")]),t._v(" "),a("p",[a("strong",[t._v("HTTPS")]),t._v("（全称：Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。")]),t._v(" "),a("p",[a("strong",[t._v("HTTPS和HTTP的区别")])]),t._v(" "),a("p",[t._v("一、HTTP 是超文本传输协议，信息是明文传输，HTTPS 则是具有安全性的 SSL 加密传输协议。")]),t._v(" "),a("p",[t._v("二、HTTPS 协议需要到 CA 申请证书，一般免费证书很少，需要交费。")]),t._v(" "),a("p",[t._v("三、HTTP 和 HTTPS 使用的是完全不同的连接方式，用的端口也不一样，前者是 "),a("strong",[t._v("80")]),t._v("，后者是 "),a("strong",[t._v("443")]),t._v("。")]),t._v(" "),a("p",[t._v("四、HTTP 的连接很简单，是无状态的；HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，比 HTTP 协议安全。")]),t._v(" "),a("h2",{attrs:{id:"本地模拟测试开启过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地模拟测试开启过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 本地模拟测试开启过程")]),t._v(" "),a("p",[t._v("HTTPS 如果生产环境应用在域名上是需要直接或间接的从 CA 申请证书，来取得浏览器的信任的。我们先在本地模拟测试一下这个过程，自己生成证书，后面介绍域名启用 HTTPS。")]),t._v(" "),a("h3",{attrs:{id:"keytool工具生成证书"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keytool工具生成证书","aria-hidden":"true"}},[t._v("#")]),t._v(" keytool工具生成证书")]),t._v(" "),a("p",[t._v("打开 JDK 自带的 keytool 目录。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ifelse.top/usr/uploads/2018/07/1528291781.jpg",alt:"https1.jpg"}})]),t._v(" "),a("p",[t._v("按住 Shift 键，同时右键点击空白处。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ifelse.top/usr/uploads/2018/07/531713451.jpg",alt:"https2.jpg"}})]),t._v(" "),a("p",[t._v("此时，进入cmd窗口。输入下面命令。")]),t._v(" "),a("pre",[a("code",[t._v('keytool -genkeypair -alias "tomcat" -keyalg "RSA" -keystore "D:\\tomcat.keystore"\n')])]),t._v(" "),a("p",[t._v("接着会让你填写一些基本信息。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ifelse.top/usr/uploads/2018/07/604886160.jpg",alt:"https3.jpg"}})]),t._v(" "),a("p",[t._v("下面简要介绍一下。")]),t._v(" "),a("pre",[a("code",[t._v("密钥库口令:123456（这个密码非常重要）\n名字与姓氏:192.168.0.110（以后访问的域名或IP地址，非常重要，证书和域名或IP绑定）\n组织单位名称:anything（随便填）\n组织名称:anything（随便填）\n城市:anything（随便填）\n省市自治区:anything（随便填）\n国家地区代码:anything（随便填）\n")])]),t._v(" "),a("h3",{attrs:{id:"应用证书到tomcat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用证书到tomcat","aria-hidden":"true"}},[t._v("#")]),t._v(" 应用证书到Tomcat")]),t._v(" "),a("p",[t._v("打开 Tomcat 配置文件 "),a("code",[t._v("conf\\server.xml")]),t._v("。")]),t._v(" "),a("p",[t._v("取消注释，并添加两个属性 "),a("code",[t._v("keystoreFile")]),t._v("，"),a("code",[t._v("keystorePass")]),t._v("。")]),t._v(" "),a("pre",[a("code",[t._v('<Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true"\n               maxThreads="150" scheme="https" secure="true"\n               clientAuth="false" sslProtocol="TLS" keystoreFile="E:/tomcat.keystore" keystorePass="123456" />\n')])]),t._v(" "),a("p",[t._v("其中，keystoreFile是上一步生成的证书文件地址，keystorePass是上一步的密钥库口令。")]),t._v(" "),a("h3",{attrs:{id:"测试https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试https","aria-hidden":"true"}},[t._v("#")]),t._v(" 测试HTTPS")]),t._v(" "),a("p",[t._v("测试链接类似于这种 "),a("code",[t._v("https://192.168.0.110:8443/your_project_name")]),t._v("。")]),t._v(" "),a("p",[t._v("观察Tomcat输出日志会发现异常。")]),t._v(" "),a("pre",[a("code",[t._v('严重: Failed to initialize end point associated with ProtocolHandler ["http-apr-8443"]\njava.lang.Exception: Connector attribute SSLCertificateFile must be defined when using SSL with APR\n        at org.apache.tomcat.util.net.AprEndpoint.bind(AprEndpoint.java:484)\n        at org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:566)\n        at org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:417)\n        at org.apache.catalina.connector.Connector.initInternal(Connector.java:956)\n        at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:102)\n        at org.apache.catalina.core.StandardService.initInternal(StandardService.java:559)\n')])]),t._v(" "),a("p",[t._v("解决方法是注释"),a("code",[t._v("conf\\server.xml")]),t._v("文件中下面一行。")]),t._v(" "),a("pre",[a("code",[t._v('\x3c!--<Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />--\x3e\n')])]),t._v(" "),a("p",[t._v("重启Tomcat ，这时可以看到浏览器已经可以打开 HTTPS 链接了。")]),t._v(" "),a("h2",{attrs:{id:"真实域名开启过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#真实域名开启过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 真实域名开启过程")]),t._v(" "),a("p",[t._v("使用自己生成的证书会遇到几个问题。")]),t._v(" "),a("p",[a("strong",[t._v("一、浏览器会对 HTTPS 使用危险标识。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ifelse.top/usr/uploads/2018/07/3247642599.jpg",alt:"https4.jpg"}})]),t._v(" "),a("p",[t._v("我们开启 HTTPS 本意是为了更安全，增加用户信心。但是浏览器使用危险标识会适得其反，吓跑用户。")]),t._v(" "),a("p",[a("strong",[t._v("二、浏览器默认不会加载非HTTPS域名下的javascript")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ifelse.top/usr/uploads/2018/07/804285821.jpg",alt:"https5.jpg"}})]),t._v(" "),a("p",[t._v("我了个擦，这和早年的禁用javascript差不多了。已经影响网页的正常运行了。")]),t._v(" "),a("p",[a("strong",[t._v("三、移动设备显示页面空白")])]),t._v(" "),a("p",[t._v("手机浏览器打开页面，也会像桌面浏览器一样弹出是否加载不受信任的页面，在微信中打开则会一片空白。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("以上种种，导致自己生成的证书无法在生产环境使用。")]),t._v(" "),a("p",[t._v("解决以上问题，需要购买CA的证书。不过我在阿里云上看到有免费的证书申请。"),a("a",{attrs:{href:"https://www.aliyun.com/product/cas",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.aliyun.com/product/cas"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"申请证书"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#申请证书","aria-hidden":"true"}},[t._v("#")]),t._v(" 申请证书")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("购买地址：https://common-buy.aliyun.com/?spm=5176.2020520163.cas.1.zTLyhO&commodityCode=cas#/buy")]),t._v(" "),a("p",[t._v("先选品牌为：Symantec ；\n然后选择证书类型为增强型。\n然后免费型的就会出现")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ifelse.top/usr/uploads/2018/07/2715620246.jpg",alt:"https6.jpg"}})]),t._v(" "),a("p",[t._v("购买过程就不详细说了。照着阿里云的提示一步一步做就好了。")]),t._v(" "),a("p",[t._v("证书生成后，会得到PFX类型的证书。")]),t._v(" "),a("h3",{attrs:{id:"tomcat-配置pfx证书"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tomcat-配置pfx证书","aria-hidden":"true"}},[t._v("#")]),t._v(" Tomcat 配置PFX证书")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("打开 Tomcat 配置文件 "),a("code",[t._v("conf\\server.xml")]),t._v("。")]),t._v(" "),a("p",[t._v("取消注释，并添加三个属性 "),a("code",[t._v("keystoreFile")]),t._v("，"),a("code",[t._v("keystoreType")]),t._v("，"),a("code",[t._v("keystorePass")]),t._v("。")]),t._v(" "),a("pre",[a("code",[t._v('<Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true"\n               maxThreads="150" scheme="https" secure="true"\n               clientAuth="false" sslProtocol="TLS" keystoreFile="/你的磁盘目录/订单号.pfx"\n    keystoreType="PKCS12"\n    keystorePass="订单号" />\n')])]),t._v(" "),a("p",[t._v("其中，keystoreFile是PFX证书文件地址，keystorePass是阿里云的订单号，keystoreType直接写PKCS12 。")]),t._v(" "),a("h3",{attrs:{id:"测试真实域名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试真实域名","aria-hidden":"true"}},[t._v("#")]),t._v(" 测试真实域名")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("重新启动Tomcat，访问你自己的域名，则可以正常使用了。浏览器会有绿色的域名标识，移动设备也正常了。至于http域名下的javascript，还是需要更换为https才能正常加载。")]),t._v(" "),a("p",[t._v("对于要不要使用 https，需要根据实际情况具体考虑，https会比http慢一些，但是会更安全。")])])},[],!1,null,null,null);e.default=s.exports}}]);